input {
	beats {
		#add variable logstash port
		port => "5044"
	}
}

filter{

	#if [log][file][path] =~ /multiversa-event\.log/ {
        grok{

    		#patterns_dir => ["/home/COCONET.DE/markusst/Downloads/logstash-7.6.0/config/pipelines/patterns"]
            pattern_definitions => {
                "REQUEST" => "(Outgoing response|Incoming request)"
                "REQUEST_TYPE" => "(POST|GET)"
            }
#            match =>  {"message" => [
#    				'^%{TIMESTAMP_ISO8601:time}%{SPACE}%{LOGLEVEL:logLevel}%{SPACE}EventLog%{SPACE}\[%{GREEDYDATA:threadID}\]\t%{ANYCHAR:parameter}[\n]Exception: %{ANYCHAR:stacktrace}$',
#    				'^%{TIMESTAMP_ISO8601:time}%{SPACE}%{LOGLEVEL:logLevel}%{SPACE}EventLog%{SPACE}\[%{GREEDYDATA:threadID}\]\t%{SPACE}%{ANYCHAR:parameter}$'
#            ]}
#            remove_field => ['message']
            match => {"message" => [
                '^%{TIMESTAMP_ISO8601:zeit}%{SPACE}%{LOGLEVEL}%{SPACE}\[%{NOTSPACE:sessionid}\]\t\[%{NOTSPACE:usergroup}\]\t\[%{NOTSPACE:userid}\]\t\[%{NOTSPACE} %{NOTSPACE}\]\t%{REQUEST:request}:%{SPACE}%{REQUEST_TYPE:request_type}%{SPACE}%{NOTSPACE:url}%{GREEDYDATA:stuff}',
                '^%{GREEDYDATA:entry}'
                ]
            }
            remove_field => ['message']
        }

        #mutate erlaubt es mir, bestimmte felder direkt zu bearbeiten, z.B. lÃ¶schen, umbenennen
        mutate {
                #gsub ist quasi so aufgebaut: [field][old][new] und ersetzte in dem angegebenen Feld den alten regex mit dem neuen
#    			gsub => [
#    				"parameter", ": ,", ': empty,'
#    			]
    		remove_field => ['host','agent']
        }
#   		kv {
#			id => "parameter"
#			source => "parameter"
#			target => "parameter"
#			field_split_pattern => ", "
#			trim_key => " "
#			trim_value => " "
#			value_split_pattern => ": "
#		}

#		date {
#			match => [ "time", "ISO8601" ]
#			target => "@timestamp"
#		}


    #}
#        if [parameter] == "empty"{
#            drop { }
#        }
}

output {
    stdout {codec => rubydebug}
}